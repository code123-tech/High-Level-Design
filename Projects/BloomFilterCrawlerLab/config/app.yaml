# BloomFilterCrawlerLab configuration

# Sizing and accuracy
expectedItems: 500000          # Estimated URLs in the ACTIVE filter; used to size bit array (m) and number of hashes (k)
targetFPR: 0.01                # Target false positive rate; lower => more memory and hashes, higher => smaller/faster but more false positives

# Rotation policy
rotation:
  hours: 24                    # Rotate ACTIVE filter every N hours to cap saturation and keep FPR stable
  graceHours: 24               # Keep PREVIOUS filter for this many hours after rotation to avoid sudden false negatives
  maxBitsSetPercent: 75        # Early-rotate threshold: if % of 1-bits exceeds this before time window, rotate immediately

# Snapshot persistence
snapshot:
  dir: data/snapshots          # Directory for serialized filter snapshots (relative to project root)
  prefix: bf                   # Filename prefix for snapshot files
  maxToKeep: 14                # Retain at most this many snapshots to bound disk usage

# Service mode
service:
  mode: cli                    # How to run the app: cli | rest
  rest:
    host: 127.0.0.1            # Bind address for REST server (use 0.0.0.0 to expose on all interfaces)
    port: 18081                # REST port; choose uncommon to avoid conflicts

# URL normalization rules
normalizer:
  lowerCaseHost: true          # Convert scheme/host to lowercase (WWW.Example.com -> www.example.com)
  stripDefaultPorts: true      # Remove :80 (http) and :443 (https) to avoid duplicates
  stripTrailingSlash: true     # Treat /path and /path/ as the same
  dropFragment: true           # Remove URL fragments (#section) that donâ€™t affect server resource
  sortQueryParams: true        # Sort query params so ?b=2&a=1 equals ?a=1&b=2

# Metrics & logging
metrics:
  enabled: true                # Enable basic counters/gauges for visibility
  logEverySeconds: 60          # Log metrics every N seconds

# Optional seed data
seedData:
  urlsFile: data/samples/urls.txt  # Optional file to preload URLs on startup (for demos/tests)

# Storage encoding for snapshots
storage:
  format: raw                  # Snapshot format: raw | pickle (raw = portable header(m,k)+bit-array; pickle = Python-only)
