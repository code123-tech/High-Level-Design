user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    # Basic logs
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct=$upstream_connect_time urt=$upstream_response_time';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout  65;

    # Gzip for text/JSON
    gzip on;
    gzip_types application/json text/plain text/css application/javascript application/xml;

    # Cache for proxied responses
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=1m use_temp_path=off;

    # Rate limit per client IP (5 requests/sec, burst 20)
    limit_req_zone $binary_remote_addr zone=perip:10m rate=5r/s;

    # Upstream with weighted canary (90/10)
    upstream app_backend {
        zone app_backend 64k;
        keepalive 16;
        server app-v1:8000 weight=9;
        server app-v2:8000 weight=1;
    }

    server {
        listen 80;
        server_name _;

        # Quick status page
        location /nginx_status {
            stub_status;
            allow all; # demo only
        }

        # Friendly root message
        location = / {
            default_type text/plain;
            return 200 'NGINX reverse proxy is running. Try /api/items or /nginx_status\n';
        }

        # API proxy with rate limiting and caching
        location /api/ {
            limit_req zone=perip burst=20 nodelay;
            limit_req_status 429;

            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";

            proxy_connect_timeout 3s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            proxy_pass http://app_backend;

            # Cache only GET/HEAD for a short time
            proxy_cache app_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_key $scheme$proxy_host$uri$is_args$args;
            proxy_cache_valid 200 60s;
            add_header X-Cache-Status $upstream_cache_status always;
        }
    }
}


